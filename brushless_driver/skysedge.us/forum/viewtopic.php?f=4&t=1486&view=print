<!DOCTYPE html>
<html dir="ltr" lang="en-gb">
<head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex" />

<title>A Forum at Sky's Edge &bull; Firmware stuff</title>

<link href="./styles/prosilver/theme/print.css" rel="stylesheet">
<link href="./styles/prosilver/theme/bidi.css" rel="stylesheet">
</head>
<body id="phpbb" class="ltr">
<div id="wrap" class="wrap">
	<a id="top" class="top-anchor" accesskey="t"></a>

	<div id="page-header">
		<h1>A Forum at Sky's Edge</h1>
		<p>Community Forum for Sky&#039;s Edge Hardware<br /><a href="https://skysedge.us/forum/">https://skysedge.us/forum/</a></p>

		<h2>Firmware stuff</h2>
		<p><a href="https://skysedge.us/forum/viewtopic.php?f=4&amp;t=1486">https://skysedge.us/forum/viewtopic.php?f=4&amp;t=1486</a></p>
	</div>

	<div id="page-body" class="page-body">
		<div class="page-number">Page <strong>1</strong> of <strong>3</strong></div>
					<div class="post">
				<h3>Firmware stuff</h3>
				<div class="date">Posted: <strong>Wed Apr 29, 2020 11:53 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content">Now my phone is working I'm starting to look at the firmware. I'm not on Github, yet, until then perhaps I could post issues here?<br>
<br>
<strong class="text-strong">FONA serial communication</strong><br>
<br>
I suspect there's an issue receiving serial data from the FONA.<br>
<br>
I thought let the ATmega hardware UART do all the serial comms; swap <em class="text-italics">FONAserial</em> for <em class="text-italics">Serial1</em>, after all the FONA is connected to RX1 / TX1 right? I swapped FONAserial for Serial1, the sketch compiled OK but the FONA didn't receive anything.<br>
<br>
The schematic shows:<br>
RX(D)1 on pin 19, really it's pin 45 used by <em class="text-italics">NoPrepend</em><br>
TX(D)1 on pin 18, really it's pin 46 used by <em class="text-italics">AltKey</em><br>
<br>
RXD2/TXD2 and RXD3/TXD3 pins are also in use.<br>
<br>
So there's no easy way to switch to Serial1. When I get the time I'll cut the connections to the mode switch, wire together pins 19 to 45 and 18 to 46 (setting pins 18 &amp; 19 to input). Then I can check whether swapping to hardware serial helps (it might not).<br>
<br>
It's worth the effort to see my daughters surprise when I handed her the working phone   <img class="smilies" src="./images/smilies/icon_e_surprised.gif" width="15" height="17" alt=":o" title="Surprised">  <img class="smilies" src="./images/smilies/icon_e_biggrin.gif" width="15" height="17" alt=":D" title="Very Happy"><br>
<br>
<span style="color:#FF4000">Update 30 April: there's a strong pull-up on the FONA Tx line (low is 2.2V) therefore the ATmega doesn't recognise the serial data. There's no s/c on the board and the FONA Tx output is fine when I disconnect it from the phone PCB. The ATmega Rx (hardware pin 19, Arduino pin 53) is shared with the SPI Slave Select and the SPI is used by e-Paper. Even though SS isn't wired to the e-Paper, the GxEPD2 library might be using 4-wire SPI mode and driving the SS line.</span></div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Fri May 01, 2020 12:16 am</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content"><strong class="text-strong">FONA serial communication</strong><br>
<br>
I just confirmed (as suspected above) the ATmega SPI SS (slave select) is interfering with the SoftwareSerial data from the FONA.<br>
<br>
The solution is either to prevent the spi.h or GxEPD2 library from using the SS line (pass!). Or use a different pin for Rx on the ATmega:
<div class="inline-attachment">
			
		
				<dl class="file">
			<dt class="attach-image"><img src="./download/file.php?id=15" class="postimage" alt="rxpin_mod.jpg" onclick="viewableArea(this);" /></dt>
						<dd>rxpin_mod.jpg (118.06 KiB) Viewed 4670 times</dd>
		</dl>
		
		
			</div>
Cut the track between ATmega hardware pin 19 and the via, remove the solder resist from the via, solder a wire from the via to ATmega hardware pin 25 (aka Arduino pin 12).<br>
<br>
Then change the SoftwareSerial instance to:
<div class="codebox"><p>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></p><pre><code>SoftwareSerial FONAserial(12, 9); //Rx, Tx (Steve's hardware mod for Rx)</code></pre></div>

The ATmega can now reliably receive data from the FONA... before we know it the Rotary Cell Phone will be displaying missed numbers  <img class="smilies" src="./images/smilies/icon_e_biggrin.gif" width="15" height="17" alt=":D" title="Very Happy"><br>
<br>
I'm happy with SoftwareSerial on my board now it's working.</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Sat May 02, 2020 2:26 am</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content"><strong class="text-strong">Battery Level</strong><br>
<br>
I got the battery level indicator working. Replace the BatteryLevel() function in <em class="text-italics">Function.ino</em> with:<br>

<div class="codebox"><p>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></p><pre><code>void BatteryLevel(){
  while (digitalRead(BatteryButton) == LOW){  //Loop for as long as the battery level button is depressed.
    FONAserial.println("AT+CBC");             //The answer is in the form eg:'+CBC: 0,100,4.232V' where 4.232 is the battery voltage
    FONAserialReceive();                      //This function also returns preceeding lines and post linefeeds, we have to parse them out  
    if (NewData == true){
      digitalWrite(StatusLED, HIGH);
      char* token = strtok(ReceivedChars, ","); //The first pass of strtok returns everything up to the first comma
      token = strtok(NULL, ",");                //...then everything between the first &amp; second comma
      token = strtok(NULL, "V");                //...then everything between the 2nd comma * the 'V'. This should be the string of voltage
      float Vbat = (String(token)).toFloat();   //Lets try to convert the voltage string to a float
      if (Vbat &gt; 2 &amp;&amp; Vbat &lt; 5) {               //This function only makes sense of ReceivedChars about 80% of tries, check result is sensible
        lhlf = int(((Vbat - 3.3) * 100/(4.2 - 3.3))/10);  //If it is, convert to 1-10 scale. Adjust if required: Vflat=3.3V, Vfull=4.2V
        Serial.print("Vbat: ");                 //This is useful for debugging via the serial USB
        Serial.println(Vbat);
        BarGraphSlow(lhlf);
      }
      else
        Serial.println("Vbat read invalid");
      NewData = false;
      digitalWrite(StatusLED, LOW);
    }
  }
}</code></pre></div></div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Sat May 02, 2020 7:09 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content"><strong class="text-strong">FONA serial communication</strong><br>
<br>
To avoid the clash between SPI slave select (used by e-paper) &amp; FONA Tx; instead of my hardware mod above, it might be possible to de-conflict in firmware.<br>
<br>
In C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\mega\pins_arduino.h<br>
The SS pin is defined:<br>
#define PIN_SPI_SS    (53)<br>
<br>
Try re-defining SS to an unused  pin with this define near the beginning of <em class="text-italics">main.ino</em>:<br>
#define PIN_SPI_SS    10<br>
<br>
I'm not going to try it myself because I've already hardware modded my board but I'd be interested to know if this works for others.</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Mon May 04, 2020 1:46 am</strong></div>
				<div class="author">by <strong>justine</strong></div>
				<div class="content">Excellent! Excellent! Thank you very much! First-rate troubleshooting. More soon.</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Mon May 11, 2020 12:52 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content">Thanks but I haven't won yet. My goal is to receive FONA Tx data reliably with, if necessary, an easy board mod (that rules out using a hardware serial).<br>
<br>
Unfortunately re-defining the SS pin as above doesn't work.<br>
<br>
Some relevant stuff on software serial here:<br>
<a href="https://www.pjrc.com/teensy/td_libs_AltSoftSerial.html" class="postlink">https://www.pjrc.com/teensy/td_libs_AltSoftSerial.html</a><br>
Near the end Paul writes: <em class="text-italics">"SoftwareSerial should NOT be used at slow baud rates, because it will interfere with the other ports."</em></div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Mon May 11, 2020 1:51 pm</strong></div>
				<div class="author">by <strong>justine</strong></div>
				<div class="content">I have to start looking into this myself. FYI, I can't recall why I resorted to software serial to begin with but there WAS a reason.</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Mon May 11, 2020 2:41 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content">A faulty pinout sheet?  <img class="smilies" src="./images/smilies/icon_e_sad.gif" width="15" height="17" alt=":(" title="Sad"> <br>
<br>
In the phone's first KiCad release there was a pinout sheet named 'AtMega2560PinMap.png'. Unfortunately it has an error; it labels hardware pin 19 as 'Digital pin 53 (PWM)(RX1)'. It can never be RX1. So I guess the intention was to use Serial1 but it wouldn't work due to wiring error.<br>
<br>
I could be wrong but I vaguely remember that pinout sheet somewhere on the arduino.cc website (since fixed).<br>
<br>
Best,<br>
<em class="text-italics">'Sherlock'</em></div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Mon May 11, 2020 7:07 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content">I re-annotated the ATmega in this schematic with correct pin descriptions following 'MegaCore Arduino Mega' convention. I recommend anyone doing any development on the phone to update their schematic ATmega pin descriptions - it will save confusion!</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Tue May 19, 2020 2:29 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content"><strong class="text-strong">Using the FONA RTC to display date time</strong><br>
<br>
I hesitate to post this, it's not as reliable as I would like and might require delay tweaking. Use the serial USB to check the code is receiving/parsing the right FONA messages. Ideally we would have a parsing engine that is fed similar to TinyGPS++ but that entails a lot of work.<br>
<br>
First check you can receive network time. Connect a serial terminal to the FONA USB and enter the following command to enable RTC auto update from the network (this setting is saved to non volatile memory): AT+CTZU=1<br>
<br>
Restart the FONA and issue the following to check the RTC is updated: AT+CCLK?<br>
If the returned date is 6 Jan 00, the FONA hasn't updated it's RTC from the network.<br>
<br>
<strong class="text-strong">Variable assignments:</strong>
<div class="codebox"><p>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></p><pre><code>byte rtcYear;
byte rtcMonth;
byte rtcDay;
byte rtcHour;
byte rtcMin;
byte dow;                     // Day of the week; 0 = Sunday, 6 = Saturday
String dowStr = "Invalid";
String monthStr = "time";
const int t[] = {0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4};  // Array t used for day of the week algorithm
</code></pre></div>

<strong class="text-strong">Replace the Sa button code in main:</strong>
<div class="codebox"><p>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></p><pre><code>  //*********************Sa BUTTON**********************************************************************************
  if (digitalRead(SaButton) == LOW){   //I couldn't think of a name for this button. Sa doesn't have particular meaning.
    //                                   Perhaps call it the T(ime) button? [SteveC]
		//IF IN 631 MODE, DO SOMETHING TBD... GET RTC TIME
		if (digitalRead(ModeSwitch_631) == LOW){
			mode = 1;
			getTime();
      Serial.printf("%d/%d/%d  %02d:%02d\n", rtcDay, rtcMonth, rtcYear+2000, rtcHour, rtcMin);
      display.setPartialWindow(0, 185, 104, 26);    // Partial update of bottom 26 rows of pixels only
      display.firstPage();                     //this function is called before every time ePaper is updated
      do {
        display.setFont();  //Back to default font
        display.setCursor(5, 185);
        display.print(dowStr);
        display.printf(" %d ", rtcDay);
        display.print(monthStr);
        display.setFont(&amp;FreeMonoBold9pt7b);
        display.setCursor(24, 208);
        display.printf("%02d:%02d", rtcHour, rtcMin);
      } while (display.nextPage());
      display.setFullWindow();          // back to full window
      display.powerOff();
    digitalWrite(StatusLED, LOW);
    }
		//IF IN NP MODE, CALL VOICEMAIL
		else if (digitalRead(ModeSwitch_NP) == LOW){
			mode = 2;
			ClearBufferSilent();
			pagenum = 8;
			PNumber[0] = 4;
			RetrieveContact();
			MakeCall();
    }
		//IF IN ALT MODE, CALL CONTACT FROM CURRENT PAGE
		else if (digitalRead(ModeSwitch_alt) == LOW){
			mode = 3;
			ClearBufferSilent();
			newrotaryinput = false;
			while (digitalRead(SaButton) == LOW){
				RotaryIn();
      }
			if (PNumber[0] != 99){
				RetrieveContact();
				MakeCall();			
				newrotaryinput = false;
				ClearBufferSilent();
      }
    }
  }
</code></pre></div>

<strong class="text-strong">Place this in Functions:</strong>
<div class="codebox"><p>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></p><pre><code>void getTime(){
  int i = 0;
  bool validMsg = false;
  digitalWrite(StatusLED, HIGH);
  do {
    FONAserial.println("AT+CCLK?");     //Get RTC values. Example answer: +CCLK: "20/05/01,13:40:58+04"
    delay(250);
    FONAserialReceive();
    Serial.print(i);                    //These 3 lines were used for debugging over USB serial
    Serial.print(": ");                 //comment these out
    Serial.println(ReceivedChars);      //if it not required.
    if ((String(ReceivedChars).indexOf("+CCLK:")) &gt;= 0)
      validMsg = true;
    i++;
    NewData = false;
    delay(100);
  } while (i &lt; 8 &amp;&amp; validMsg == false);    // Try up to 8 attempts to get a valid time msg (Rx buffer may contain junk)
  delay(80);
  if (validMsg == true){
    char * token = strtok(ReceivedChars, "\"");  //returns everything before the first '"' &amp; discard it
    token = strtok(NULL, "/");                   //...then everything up to the first '/' but process it (2 digit year)
    rtcYear = (String(token)).toInt();
    token = strtok(NULL, "/");                   //...then return remainder up to next '/' (2 digit month)
    rtcMonth = (String(token)).toInt();
    token = strtok(NULL, ",");                   //...return remainder up to ',' (2 digit day of month)
    rtcDay = (String(token)).toInt();
    token = strtok(NULL, ":");                   //...return remainder up to first ':' (hour)
    rtcHour = (String(token)).toInt();
    token = strtok(NULL, ":");                   //...return remainder up to next ':' (minutes)
    rtcMin = (String(token)).toInt();
    // Calculate day of week (dow) for a given date, Sun=0, Sat=6
    // using Tomohiko Sakamoto's algorithm
    int y = (rtcYear+2000) - (rtcMonth &lt; 3);
    dow = (y + y/4 - y/100 + y/400 + t[rtcMonth-1] + rtcDay) % 7;
    switch (dow) {
      case 0:
        dowStr = "Sun";
        break;
      case 1:
        dowStr = "Mon";
        break;
      case 2:
        dowStr = "Tue";
        break;
     case 3:
        dowStr = "Wed";
        break;
      case 4:
        dowStr = "Thu";
        break;
      case 5:
        dowStr = "Fri";
        break;
      case 6:
        dowStr = "Sat";
        break;
      default:
        break;
      }
    switch (rtcMonth) {         // Because an old fashioned phone should use words rather than numbers!
      case 1:                   // also some countries use weird day, month number order!
        monthStr = "January";
        break;
      case 2:
        monthStr = "February";
        break;
      case 3:
        monthStr = "March";
        break;
      case 4:
        monthStr = "April";
        break;
     case 5:
        monthStr = "May";
        break;
      case 6:
        monthStr = "June";
        break;
      case 7:
        monthStr = "July";
        break;
      case 8:
        monthStr = "August";
        break;
      case 9:
        monthStr = "September";
        break;
      case 10:
        monthStr = "October";
        break;
      case 11:
        monthStr = "November";
        break;
      case 12:
        monthStr = "December";
        break;
      default:
        break;
      }
  }
  else {
    dowStr = "Invalid";
    monthStr = "time";
  }
}
</code></pre></div></div>
			</div>
			<hr />
			</div>

	<div id="page-footer" class="page-footer">
		<div class="page-number">All times are <span title="UTC">UTC</span><br />Page <strong>1</strong> of <strong>3</strong></div>
			<div class="copyright">
				<p>Powered by <a href="https://www.phpbb.com/">phpBB</a>&reg; Forum Software &copy; phpBB Limited
				</p>
							</div>
	</div>
</div>

</body>
</html>
