<!DOCTYPE html>
<html dir="ltr" lang="en-gb">
<head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex" />

<title>A Forum at Sky's Edge &bull; Firmware stuff - Page 3</title>

<link href="./styles/prosilver/theme/print.css" rel="stylesheet">
<link href="./styles/prosilver/theme/bidi.css" rel="stylesheet">
</head>
<body id="phpbb" class="ltr">
<div id="wrap" class="wrap">
	<a id="top" class="top-anchor" accesskey="t"></a>

	<div id="page-header">
		<h1>A Forum at Sky's Edge</h1>
		<p>Community Forum for Sky&#039;s Edge Hardware<br /><a href="https://skysedge.us/forum/">https://skysedge.us/forum/</a></p>

		<h2>Firmware stuff</h2>
		<p><a href="https://skysedge.us/forum/viewtopic.php?f=4&amp;t=1486">https://skysedge.us/forum/viewtopic.php?f=4&amp;t=1486</a></p>
	</div>

	<div id="page-body" class="page-body">
		<div class="page-number">Page <strong>3</strong> of <strong>3</strong></div>
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Fri Jun 12, 2020 1:20 pm</strong></div>
				<div class="author">by <strong>justine</strong></div>
				<div class="content">Steve et al,<br>
<br>
I just wanted to say thank you for all your effort and attention. I've been swamped lately getting in a proposal for my day job and I'm trying to get back to phone stuff. Also have pre-existing robotics stuff for Sky's Edge that I need to get off my plate. But anyway, I'm really happy to see this activity and will <em class="text-italics">eventually</em> catch up on all the progress.<br>
<br>
~Justine</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Fri Jun 12, 2020 9:04 pm</strong></div>
				<div class="author">by <strong>chaza</strong></div>
				<div class="content">Thanks Steve -- I should have known about that Code block format but have not used it (don't do much posting) -- will use in the future. <br>
I just checked and putting the pinMode(SS, INPUT) at the end of setup() is sufficient by itself. So, it looks like once the display is initialized then it is unaffected by this. I will do some more testing but so far this seems ok. As I mentioned, I can see very little on my display at the moment (!) but from what I see there, and from serial output to a terminal, the reading of the serial output from the FONA is ok.</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Sun Jun 14, 2020 8:46 pm</strong></div>
				<div class="author">by <strong>paedipod</strong></div>
				<div class="content">Hi All,<br>
<br>
Away for a while....after wrecking my display, the new one(s) arrived from AliExpress on Friday. So, removed and reinstalled (thanks SteveC for the tips posted elsewhere, I can now case/uncase the phone in minutes instead of hours.)<br>
<br>
Anyway thanks chaza for the "solution" to the pin problem. I too am a little under skilled for soldering a 0.2mm wire to anything. Things seem to be working so far.....although have not been able to make the missed call function work. <br>
<br>
And thanks SteveC for posting everything up here and in GitHub, although I don't think that I can use the fork without the hardware modification. Seems like the battery level and signal strength now working as intended.  I have the date display working but still getting the time as  00:00.<br>
<br>
So much improved functionality since last check in....now to start bending the display!</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Sun Jun 14, 2020 10:22 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content">Hi Justine, good to see you back. I guessed you must be very busy and also working on the 4G kit but between all of us here we're getting the 3G model covered.<br>
<br>
This evening I modded my spare board so the FONA Tx pin is wired to the original Arduino digital pin 53. I modified my simple test sketch (posted earlier on this forum) to variously; set SS pinMode, initialise display, write display, on different button pushes.<br>
<br>
I confirmed/discovered [updated]:
<ul>
<li>the ATmega SS pin mode is set to output high as soon as display.init is called</li>
<li>setting pinMode(SS, INPUT_PULLUP); does remove the conflict*, the FONA can send to the ATmega (thanks Chaza)</li>
<li>the display stops working if SS is pulled low during a display update.</li>
</ul>

* It's important to keep this pin high, especially when the FONA is not installed (if it is, the pullup won't hurt anyway). Fortunately the idle state for 'RS232 TTL serial' is defined as 1.<br>
<br>
Please don't blame the messenger! I really want this to work without a board hardware mod.<br>
<br>
There's probably a workaround, perhaps some direct register setting to change SPI back to master (as well as SS pinMode). I'll have a look when I get the chance but I can't promise anything. But there's a risk of something adverse happening if the FONA Tx sends data during a display update. In this case the ATmega SPI switches from master to slave and the display will fail to update. There's nothing we can do about this mode switching, its hardcoded in the ATmega.<br>
<br>
If anyone is nervous about the wire change but is going to try anyway (i.e. don't blame me), I have two suggestions;<br>
<br>
<strong class="text-strong">The neat way:</strong><br>
This is the method I used (see photos in my GitHub fork). Don't slice the track, press the tip of a scapel down, more like a chisel than a knife, scrape the solder resist off the via as gently as possible so as not to break the through hole connection. I find a x6 illuminated magnifier works well for me (a good compromise between magnification and working distance) and I have a needle tipped soldering iron.<br>
<br>
<strong class="text-strong">The other way:</strong><br>
Destroy the via connection to hardware pin 19 (the SS pin), either cut the track or destroy the via through hole with a 0.8mm drill. Take a fine connecting wire (excess mic lead works) from the ATmega hardware pin 25 (corner pins are less tricky to solder) direct to the header pad for the FONA Tx pin. But you can't easily go back with this method.<br>
<br>
<strong class="text-strong">Update:</strong> the SPI can be switched back to master with:
<div class="codebox"><p>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></p><pre><code>SPCR |= (1&lt;&lt;MSTR);</code></pre></div>
However This is not enough because when the FONA pulls SS low during a display update, the ATmega hangs. There's the SPIF interrupt to sort out and clear. From the ATmega2560 datasheet:  <em class="text-italics">If SS is an input and is driven low when the SPI is in Master mode, this will also set the SPIF Flag.</em><br>
<br>
<strong class="text-strong">Further reading:</strong><br>
<a href="http://maxembedded.com/2013/11/the-spi-of-the-avr/#SS" class="postlink">maxembedded.com/2013/11/the-spi-of-the-avr</a><br>
<a href="http://ww1.microchip.com/downloads/en/DeviceDoc/ATmega640-1280-1281-2560-2561-Datasheet-DS40002211A.pdf" class="postlink">ATmega2560 datasheet. See section 21.1, SS' Pin Functionality</a></div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Mon Jun 15, 2020 8:31 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content"><strong class="text-strong">The short answer!</strong><br>
<br>
If not rewiring the FONA Tx pin, then insert:<br>

<div class="codebox"><p>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></p><pre><code>pinMode(SS, INPUT_PULLUP);  // Set SS' pin as input, the pullup ensures this doesn't halt the ATmega if the pin is floating low (no FONA)</code></pre></div>

after <em class="text-italics">display.init(115200);</em> but note the ATmega halts if SS is pulled low during a display update.</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Tue Jun 16, 2020 12:05 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content">This might work (for unmodified boards) but it's a bit of a kludge:<br>

<div class="codebox"><p>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></p><pre><code>// Put this with the other includes near the top of the sketch
#include &lt;Adafruit_SleepyDog.h&gt;

// Put this in setup()
int countdownMS = Watchdog.enable(4000);

// Either put this immediately after display.init(115200);
pinMode(SS, INPUT_PULLUP);
// or this, if you're sure the board will never be tested without a FONA
pinMode(SS, INPUT);

// Put this somewhere in loop() where it will be called once per loop
Watchdog.reset();
</code></pre></div>

The pinMode instruction removes the conflict between FONA Tx and SPI SS but does not avoid lockup when SS is pulled low during a display update.<br>
<br>
The rest of the code resets the board if the ATmega locks up. A full display update takes almost 3s so a watchdog timeout of 4s is about right.<br>
<br>
However I won't be supporting this. The more reliable option is to solder a new connection for FONA Tx which is what I've done with my boards. Any firmware I develop will require this hardware mod.</div>
			</div>
			<hr />
					<div class="post">
				<h3>Re: Firmware stuff</h3>
				<div class="date">Posted: <strong>Fri Jul 10, 2020 2:42 pm</strong></div>
				<div class="author">by <strong>SteveC</strong></div>
				<div class="content"><strong class="text-strong">Doubling battery life</strong><br>
<br>
I just achieved 48 hour battery life by allowing the FONA to go to idle. Idle state is possible by forcing the FONA Rx pin low (normal RS232 idle state is high). While in idle the FONA consumes approx 5mA (depending on RF band), it will still receive calls and send URCs (Unsolicited Response Codes) on the Tx pin, e.g. caller ID.<br>
<br>
The FONA is woken up and able to receive commands over it's UART by setting the FONA Rx pin high and pulsing FONA DTR low.<br>
<br>
Even longer battery life would possible if I didn't wake the FONA ever 10s to check for a time update (I don't know how long it takes for the FONA to switch to idle) but it's a significant improvement already... and the FONA RI pin could be used to wake the ATmega from sleep. It's entirely feasible this phone could work for 10 days standby on one charge.</div>
			</div>
			<hr />
			</div>

	<div id="page-footer" class="page-footer">
		<div class="page-number">All times are <span title="UTC">UTC</span><br />Page <strong>3</strong> of <strong>3</strong></div>
			<div class="copyright">
				<p>Powered by <a href="https://www.phpbb.com/">phpBB</a>&reg; Forum Software &copy; phpBB Limited
				</p>
							</div>
	</div>
</div>

</body>
</html>
